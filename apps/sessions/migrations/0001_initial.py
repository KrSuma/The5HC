# Generated by Django 5.0.1 on 2025-06-08 16:07

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SessionPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(blank=True, max_length=200, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Original total amount in KRW', max_digits=10)),
                ('session_price', models.DecimalField(decimal_places=2, help_text='Price per session in KRW', max_digits=10)),
                ('total_sessions', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('remaining_sessions', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('remaining_credits', models.DecimalField(decimal_places=2, help_text='Remaining monetary credits in KRW', max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('gross_amount', models.IntegerField(blank=True, help_text='Gross amount including all fees', null=True)),
                ('vat_amount', models.IntegerField(blank=True, help_text='VAT amount', null=True)),
                ('card_fee_amount', models.IntegerField(blank=True, help_text='Card processing fee amount', null=True)),
                ('net_amount', models.IntegerField(blank=True, help_text='Net amount after fees', null=True)),
                ('vat_rate', models.DecimalField(decimal_places=2, default=Decimal('0.10'), max_digits=5)),
                ('card_fee_rate', models.DecimalField(decimal_places=2, default=Decimal('0.035'), max_digits=5)),
                ('fee_calculation_method', models.CharField(choices=[('inclusive', 'Inclusive'), ('exclusive', 'Exclusive')], default='inclusive', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_packages', to='clients.client')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_packages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'session_packages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_date', models.DateField()),
                ('session_time', models.TimeField(blank=True, null=True)),
                ('session_duration', models.IntegerField(help_text='Duration in minutes', validators=[django.core.validators.MinValueValidator(1)])),
                ('session_cost', models.DecimalField(decimal_places=2, help_text='Cost of this session in KRW', max_digits=10)),
                ('status', models.CharField(choices=[('scheduled', '예약됨'), ('completed', '완료됨'), ('cancelled', '취소됨')], default='scheduled', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='clients.client')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='training_sessions.sessionpackage')),
            ],
            options={
                'db_table': 'sessions',
                'ordering': ['-session_date', '-session_time'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Original payment amount', max_digits=10)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', '현금'), ('card', '카드'), ('transfer', '계좌이체'), ('other', '기타')], max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('payment_date', models.DateField()),
                ('gross_amount', models.IntegerField(blank=True, null=True)),
                ('vat_amount', models.IntegerField(blank=True, null=True)),
                ('card_fee_amount', models.IntegerField(blank=True, null=True)),
                ('net_amount', models.IntegerField(blank=True, null=True)),
                ('vat_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('card_fee_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='clients.client')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='training_sessions.sessionpackage')),
            ],
            options={
                'db_table': 'payments',
                'ordering': ['-payment_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeeAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calculation_type', models.CharField(max_length=20)),
                ('gross_amount', models.IntegerField()),
                ('vat_amount', models.IntegerField()),
                ('card_fee_amount', models.IntegerField()),
                ('net_amount', models.IntegerField()),
                ('vat_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('card_fee_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('calculation_details', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fee_audit_logs', to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fee_audit_logs', to='training_sessions.payment')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fee_audit_logs', to='training_sessions.sessionpackage')),
            ],
            options={
                'db_table': 'fee_audit_log',
                'ordering': ['-created_at'],
            },
        ),
    ]
