# Generated by Django 5.0.1 on 2025-06-08 16:07

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('overhead_squat_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('overhead_squat_notes', models.TextField(blank=True, null=True)),
                ('push_up_reps', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('push_up_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('push_up_notes', models.TextField(blank=True, null=True)),
                ('single_leg_balance_right_eyes_open', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('single_leg_balance_left_eyes_open', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('single_leg_balance_right_eyes_closed', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('single_leg_balance_left_eyes_closed', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('single_leg_balance_notes', models.TextField(blank=True, null=True)),
                ('toe_touch_distance', models.FloatField(blank=True, help_text='Distance in cm (negative for below toes, positive for above)', null=True)),
                ('toe_touch_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('toe_touch_notes', models.TextField(blank=True, null=True)),
                ('shoulder_mobility_right', models.FloatField(blank=True, help_text='Distance in cm', null=True)),
                ('shoulder_mobility_left', models.FloatField(blank=True, help_text='Distance in cm', null=True)),
                ('shoulder_mobility_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('shoulder_mobility_notes', models.TextField(blank=True, null=True)),
                ('farmer_carry_weight', models.FloatField(blank=True, help_text='Weight in kg', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('farmer_carry_distance', models.FloatField(blank=True, help_text='Distance in meters', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('farmer_carry_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('farmer_carry_notes', models.TextField(blank=True, null=True)),
                ('harvard_step_test_heart_rate', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(40), django.core.validators.MaxValueValidator(250)])),
                ('harvard_step_test_duration', models.FloatField(blank=True, help_text='Duration in seconds', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('harvard_step_test_notes', models.TextField(blank=True, null=True)),
                ('overall_score', models.FloatField(blank=True, null=True)),
                ('strength_score', models.FloatField(blank=True, null=True)),
                ('mobility_score', models.FloatField(blank=True, null=True)),
                ('balance_score', models.FloatField(blank=True, null=True)),
                ('cardio_score', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='clients.client')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments_conducted', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'assessments',
                'ordering': ['-date', '-created_at'],
            },
        ),
    ]
